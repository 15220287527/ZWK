//
//  NetWork.m
//  Interview
//
//  Created by 张伟康 on 2020/10/23.
//

#import "Network.h"
#import <AVFoundation/AVFoundation.h>

@implementation Network


/*
 
 
 
 算法
 爬楼梯 翻转链表 移除链表元素 二分查找 二叉树的最近公共祖先 从数组中取出几个最小的值（topK问题） 矩阵的最小路径和
 一个数组每个数字都出 现2次 从中去掉一个找出去掉的数字（异或）
 快排实现过程及复杂度,二叉树的遍历前序、后续遍历
 1.100首歌，怎么生成随机列表
 
 100W条字符串选出重复最多的十条
 100w字符统计使用次数
 2. 100万的手机号码怎么存储最省空间
 3. 设计一个图片缓存的Manager
 怎么设计一个Cache
 
 网络
 
 长连接，httpDNS
 3.http/https（https原理，加密解密、证书协商）、DNS（原理、解决劫持）、TCP（基本原理）（这三个问得多 有深度）网络七层
 1.https的缓存机制
 2.http的分片
 
 项目
 
 9、如何保障App的数据安全
 1. 短时间内会被大量调用的一个方法，设计一个方式延迟、减少其调用次数。
 1.H5与原生交互
 7) 讲一下自己实现下拉刷新的思路
 5、avpayer的两个seek方法的实现机制
 6、局域网内设置了AP隔离，怎么通信
 7、图像处理相关，滤镜等
 12. MLeaksFinder原理, 同理如果用来检测view有没有释放应该怎么做
     方法交换了导航控制器的Push和Pop相关方法，在Pop后3秒执行一个方法，如果self不为nil就会打印日志，触发断言
 13. 有没有做过复杂的动画 CAAnimationGroup
 14. 有没有使用过音视频
 16. 是否懂汇编   
 17. 设计模式, 单例的优缺点
 7. 无痕埋点
    （Method Swizzing hook系统方法 viewDidLoad、sendAction:to:forEvent、didSelect、initWithTarget:action:）
 12. 设计模式，项目中是否有用到
 13. 如何解耦
 8.事件传递机制，响应者链，hitTest与pointInside，实际应用
 
 1、自我介绍
 2、现在在做项目的难点是什么，一些细节延伸
 4. 有哪些crash经验, 举具体的例子说明
 10.还有什么想问的？
 9. 项目中做的不好的地方，不满意的地方
 10. 自己的优缺点，对于不足的地方如何加强如何改正
 1. 怎么保证项目软件质量
 5. 怎么提升自己的技术
 6. 在阅读源码中学到了什么
 
 
 
 语法
 
 1. 一个Int型是有4个字节，a = 1， b = 2，怎样不使用第三个变量，使得a，b变量交换值。
 2. 二题考查了下“与、或”运算
 3. 字节序和大小端对齐
 gcd - gcd的方法、gcd中的block为什么可以不用自己管理?
 runtime-的数据结构和场景
 消息转发，hook等
 category可以添加属性吗？关联对象可以，为什么不能添加示例变量，如果示例变量也保存到
 全局方法中如何实现
 block类型，内存
 block的截获变量
 深拷贝、浅拷贝
 kvo要释放监听吗
 性能优化--网络、UI、runloop，如何获取到卡顿的方法
 10、runLoop,和runloop的运用，实现细节
 12、多线程与线程同步锁
 2. 消息机制, 消息转发
 3. 方法缓存结构, 存取过程
 5. arc原理, arc下的相关优化
 6. runloop流程原理
 7. GCD和NSOperation区别
 8. weak原理
 9. 关联对象原理, 什么时候释放
 10. 性能优化相关, 内存,启动
 11. lldb命令
 18. block内存管理
 19. 对象的内存布局
 20. 类方法和实例方法的区别
 4.RunLoop（runloop是什么 与线程的关系 基本工作流程 哪些技术实现都需要runloop）
 5.runtime（cache_t、objc_msgSend(方法调用本质、消息发送、方法动态解析、消息转发流程、工作哪些地方用到了)）
 6.method_swizzling
 7.category实现原理（很详细 包括load的顺序）
 8. 内存优化，卡顿优化，启动优化
 内存管理
 锁，NSLock使用什么锁来实现
 1) weak实现原理 weak对象的初始化、引用、释放
 2) Runtime 消息转发机制原理
 1、kvo的实现原理，获取对象的类型时底层原理是怎么实现的
 2、MVC、MVP、MVVM的理解
 3、对象方法列表中的数据结构，为什么这么设计
 4、分类的实现原理，分类方法是怎么调用的
 8、聊下性能优化
 
 */

@end
